syntax = "proto3";

option csharp_namespace = "ClinicServiceNamespace";

// https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/wrappers.protos
import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";

// Сервис клиники
service ClinicService {
    // Добавить клиента
    rpc CreateClient(CreateClientRequest) returns (CreateClientResponse) {
        option (google.api.http) = {
            post: "/api/clients"
            body: "*"
        };
    }
    // Обновить клиента
    rpc UpdateClient(UpdateClientRequest) returns (UpdateClientResponse) {
        option (google.api.http) = {
            put: "/api/clients/{clientId}"
            body: "*"
        };
    }
    // Удалить клиента
    rpc DeleteClient(DeleteClientRequest) returns (DeleteClientResponse) {
        option (google.api.http) = {
            delete: "/api/clients/{clientId}"
        };
    }
    // Получить клиента по идентификатору
    rpc GetClientById(GetClientByIdRequest) returns (GetClientByIdResponse) {
        option (google.api.http) = {
            get: "/api/clients/{clientId}"
        };
    }
    // Получить список клиентов
    rpc GetClients(GetClientsRequest) returns (GetClientsResponse) {
        option (google.api.http) = {
            get: "/api/clients"
        };
    }
}

// Параметры запроса на создание клиента
message CreateClientRequest {
    // Документ
    string document = 1;
    // Фамилия
    string surname = 2;
    // Имя
    string firstname = 3;
    // Отчество
    string patronymic = 4;
}

// Результат создания клиента
message CreateClientResponse {
    google.protobuf.Int32Value clientId = 1;
    int32 errCode = 2;
    string errMessage = 3;
}

// Параметры запроса на обновление клиента
message UpdateClientRequest {
    int32 clientId = 1;
    string document = 2;
    string surname = 3;
    string firstname = 4;
    string patronymic = 5;
}

// Результат обновления клиента
message UpdateClientResponse {
    int32 errCode = 1;
    string errMessage = 2;
}

// Параметры запроса на удаление клиента
message DeleteClientRequest {
    int32 clientId = 1;
}

// Результат запроса на удаление клиента
message DeleteClientResponse {
    int32 errCode = 1;
    string errMessage = 2;
}

// Параметры запроса на получение клиента по идентификатору
message GetClientByIdRequest {
    int32 clientId = 1;
}

// Результат получения клиента по идентификатору
message GetClientByIdResponse {
    ClientResponse client = 1;
    int32 errCode = 2;
    string errMessage = 3;
}

// Результат получения клиента
message ClientResponse {
    int32 clientId = 1;
    string document = 2;
    string surname = 3;
    string firstname = 4;
    string patronymic = 5;
}

// Параметры запроса получения списка клиентов
message GetClientsRequest {

}

// Результат запроса получения списка клиентов
message GetClientsResponse {
    repeated ClientResponse clients = 1;
    int32 errCode = 2;
    string errMessage = 3;
}